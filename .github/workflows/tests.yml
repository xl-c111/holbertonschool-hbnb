name: Run Tests

on:
  push:
    branches: [ main, xiaoling-deployment, xiaoling, wawa ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        cd backend
        python -m pytest -v --tb=short
      env:
        FLASK_ENV: testing

    - name: Generate coverage report
      if: matrix.python-version == '3.11'
      run: |
        cd backend
        pip install pytest-cov
        python -m pytest --cov=app --cov-report=xml --cov-report=term

    - name: Upload coverage to artifacts
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: backend/coverage.xml
        retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ All tests passed successfully!"
          exit 0
        else
          echo "❌ Tests failed!"
          exit 1
        fi
